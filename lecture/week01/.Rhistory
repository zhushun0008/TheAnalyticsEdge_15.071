q()
x=c(2,7,5)
x
y=seq(from=4,length=3,by=3)
?seq
y
x+y
z[,1]
z=matrix(seq(1,12),4,3)
z[,1]
z[,1,drop=FALSE]
dim(z)
x=runif(50)
x
?runif
par(mfrow=c(2,1))
plot(x,y)
### random uniform
x=runif(50)
### random Gaussion
y=rnorm(50)
par(mfrow=c(2,1))
plot(x,y)
plot(x,y)
plot(x,y,xlab="Random Uniform",ylab="Random Normal",pch="*",col="blue")
plot(x,y)
plot(x,y,xlab="Random Uniform",ylab="Random Normal",pch="*",col="blue")
plot(x,y)
plot(x,y,xlab="Random Uniform",ylab="Random Normal",pch="*",col="blue")
plot(x,y)
plot(x,y,xlab="Random Uniform",ylab="Random Normal",pch="*",col="blue")
plot(x,y)
plot(x,y,xlab="Random Uniform",ylab="Random Normal",pch="*",col="blue")
plot(x,y)
plot(x,y,xlab="Random Uniform",ylab="Random Normal",pch="*",col="blue")
plot(x,y)
plot(x,y,xlab="Random Uniform",ylab="Random Normal",pch="*",col="blue")
hist(y)
hist(y)
plot(x,y)
hist(y)
par(mfrow=c(2,1))
plot(x,y)
hist(y)
plot(x,y,xlab="Random Uniform",ylab="Random Normal",pch="*",col="blue")
plot(x,y)
hist(y)
par(mfrow=c(2,1))
plot(x,y)
hist(y)
Auto=read.csv("Auto.csv")
### Reading in data
Auto=read.csv("Auto.csv")
pwd()
Auto=read.csv("../Auto.csv")
names(Auto)
dim(Auto)
### Data frame
###	It's sort of like a matrix, except that the columns can ###	be variables of different kinds. So you can have what ###	we call factors, and continuous variables, and
###	matrices, and so on, which is really the way we think ###	of observations in statistics.
class(Auto)
summary(Auto)
### Data frame is also a list. getting the element of a list we can use $
plot(Auto$cylinders,Auto$mpg)
plot(Auto$cyl,Auto$mpg)
### atach creates a workspace with all the named variables as ### now variables in your workspace.So now you can access them ### by name.
attach(Auto)
### command Search, it tells us our various workspaces.
search()
plot(cylinders,mpg)
cylinders=as.factor(cylinders)
plot(cylinders,mpg,xlab="Cylinders",ylab="Mpg",col="red")
pdf(file="../mpg.pdf")
plot(cylinders,mpg,xlab="Cylinders",ylab="Mpg",col="red")
dev.off()
pairs(Auto,col="brown")
pairs(mpg~cylinders+acceleration+weight,Auto)
q()
library(MASS)
library(ISLR)
names(Boston)
?Boston
plot(medv~lstat,Boston)
plot(medv ~ lstat, Boston)
fit1 = lm(medv ~ lstat, data = Boston)
fit1
summary(fit1)
names(fit1)
fit2 = lm(medv ~ lstat + age,data = Boston)
summary(fit2)
fit3 = lm(medv ~ .,Boston)
summary(fit3)
summary(fit3)
par(mfrow = c(2,2))
plot(fit3)
summary(fit3)
par(mfrow = c(2,2))
plot(fit3)
?update
fix(Carseats)
require(ISLR)
names(Smarket)
summary(Smarket)
pairs(Smarket,col=Smarket$Direction)
library(ggplot2)
library(GGally)
?GGally
?GGally
library(GGally)
?GGally
??GGaally
ggpairs(Smarket,col=Smarket$Direction)
?ggpairs
ggpairs(Smarket,aes(color = Smarket$Direction))
ggpairs(Smarket,color = Smarket$Direction)
ggsave("smartetBycolor.png")
getwd()
ggsave("smartetBycolor.png")
pairs(Smarket,color = Smarket$Direction)
ggpairs(Smarket,color = Smarket$Direction)
getwd()
USDA = read.csv("F:/SkyDrive/Studying/MIT_COURSES/Th AnalyticsEdge_15.071x/lecture/dataset/USDA.csv")
setwd("F:/SkyDrive/Studying/MIT_COURSES/Th AnalyticsEdge_15.071x/lecture/week01")
setwd("F:/SkyDrive/Studying/MIT_COURSES/Th AnalyticsEdge_15.071x/lecture/week01")
getwd()
USDA = read.csv("F:/SkyDrive/Studying/MIT_COURSES/Th AnalyticsEdge_15.071x/lecture/dataset/USDA.csv")
str(USDA)
data(diamonds)
?diamonds
head(USDA)
head(USDA)
str(USDA)
summary(USDA)
USDA$Sodium
summary(USDA)
which.max(USDA$Sodium)
?which
names(USDA)
USDA$Description[265]
HighSodium = subset(USDA, Sodium>10000)
nrow(HighSodium)
HighSodium$Description
?match
1:10 %in% c(1,3,5,9)
match(1, c(1,3,5,9))
match("CAVIAR", USDA$Description)
USDA$Sodium[4154]
USDA$Sodium[match("CAVIAR", USDA$Description)]
summary(USDA$Sodium)
sd(USDA$Sodium, na.rm = TRUE)
plot(USDA$Protein, USDA$TotalFat)
plot(USDA$Protein, USDA$TotalFat)
par(mfrow=c(1,1))
plot(USDA$Protein, USDA$TotalFat)
plot(USDA$Protein, USDA$TotalFat, xlab="Protein", ylab = "Fat", main = "Protein vs Fat", col = "red")
hist(USDA$VitaminC, xlab = "Vitamin C (mg)", main = "Histogram of Vitamin C")
hist(USDA$VitaminC, xlab = "Vitamin C (mg)", main = "Histogram of Vitamin C", xlim = c(0,100))
hist(USDA$VitaminC, xlab = "Vitamin C (mg)", main = "Histogram of Vitamin C", xlim = c(0,100), breaks=100)
hist(USDA$VitaminC, xlab = "Vitamin C (mg)", main = "Histogram of Vitamin C", xlim = c(0,100), breaks=2000)
summary(USDA$VitaminC)
hist(USDA$VitaminC, xlab = "Vitamin C (mg)", main = "Histogram of Vitamin C", xlim = c(0,100), breaks=100)
boxplot(USDA$Sugar, ylab = "Sugar (g)", main = "Boxplot of Sugar")
HighSodium = as.numeric(USDA$Sodium > mean(USDA$Sodium, na.rm=TRUE))
str(HighSodium)
USDA$HighSodium = as.numeric(USDA$Sodium > mean(USDA$Sodium, na.rm=TRUE))
USDA$HighCarbs = as.numeric(USDA$Carbohydrate > mean(USDA$Carbohydrate, na.rm=TRUE))
USDA$HighProtein = as.numeric(USDA$Protein > mean(USDA$Protein, na.rm=TRUE))
USDA$HighFat = as.numeric(USDA$TotalFat > mean(USDA$TotalFat, na.rm=TRUE))
table(USDA$HighSodium)
table(USDA$HighSodium, USDA$HighFat)
tapply(USDA$Iron, USDA$HighProtein, mean, na.rm=TRUE)
tapply(USDA$VitaminC, USDA$HighCarbs, max, na.rm=TRUE)
tapply(USDA$VitaminC, USDA$HighCarbs, summary, na.rm=TRUE)
hist(USDA$VitaminC, xlab = "Vitamin C (mg)", main = "Histogram of Vitamin C")
summary(USDA$VitaminC)
